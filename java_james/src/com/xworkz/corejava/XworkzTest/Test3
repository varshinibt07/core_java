1. What is var-args? Explain with Syntax
-->The varrags allows the method to accept zero or muliple arguments. Before varargs either we use overloaded
  method or take an array as the method parameter but it was not considered good because it leads to the
  maintenance problem.
  If we don't know how many argument we will have to pass in the method, varargs is the better approach.
  Syntax :return_type Method_name(data_type variable name){}


2. What is blocks? Explain the types of Blocks
-->Blocks are the set of statements used for initialization.
   Their are 2 types of blocks : *Static Block
									*Non-Static Block
	Static Blocks : 
	*SIB-Static Initializtion Block
	*Static blocks are the set of statements used to initialize static variable.
	*Syntax :Static
				{
					
					}
	*we can have multiple stack block and  execution will happen in a sequential.
	*Static blocks executed before main() 

	Non-Static Blocks :
	*IIB-Instance intialization block.
	*Non-Static blocks are the set of statements used to initialize static variable and Non-Static variable.
	*Non-Static blocks executed during object creation.


3. What is hashCode() ?Give example
-->hash() code methods is used to identify an object uniquely.
   ex:- class employee{
         public int hashcode(){
          return 1234;}
         public static void main(String args[]){
           Employee e = new Employee();
           sop(e.hashcode())
          } 
			}


4. Why String is immutable? What is string constant pool
-->String is immutable :when we re-initialize a string object,rather than modifying the same object,a new object 
	is created and the referenece pointing to the old object gets deferenced and starts pointing to the newly creted 
	object.
	String Constant pool :String objects are stored inside a memory location .
	*Literal objects are stored inside constant pool and it doesnot allow duplicates. 


5. Difference between character constant and String constant ?
-->Character constant:-
     Character Constants are written by enclosing a character within a pair of single quotes.
      Character Constants are assigned to variables of type char. 

   String constant:-
     jString Constants are written by enclosing a set of characters within a pair of double quotes.
       String Constants are assigned to variables of type String.


6. What is an Exception? explain the different types of Exception
-->Exception is an object which occur at the time of execution of program and that disturbs the flow of execution.
	Types of exception :1.Checked Exception
						2.Unchecked Exception
	1.Checked Exception : The class that directly inherit the throwable class except runtime Exception and error.
							eg:IO Exception,SQL Exception
						These are also called as compile time.
	2.Unchecked Exception : The classes that inherit the runtime Exception.
							eg:Arithmatic Exception	
				

7. Advantages of Exception ?
-->Advantages of exception :
  *Separating Error-Handling Code from “Regular” Code.
  * Propagating Errors Up the Call Stack.
  * Grouping and Differentiating Error Types.


8. Can we have try block with  catch block?
-->yes


9. Explain Throw keyword in java?
-->The throw keyword is used to throw an statement,it throws only one object at a time we cant throw multiple object. 
   

10. Can you write any code after the throw statement?
-->No,we cant write any statements after throw statement because after throw statement no statements can be executed
   or valid.


11. Explain the Finally block with example?
-->java finally block is always executed whether an exception is handled or not. Therefore, it contains all the 
	necessary statements that need to be printed regardless of the exception occurs or not.
    use of finally:
    *finally block in Java can be used to put "cleanup" code such as closing a file, closing connection, etc.
    *The important statements to be printed can be placed in the finally block.
     The finally block follows the try-catch block.
    eg: 
      class TestFinallyBlock {    
               public static void main(String args[]){    
               try{    
                  
                int data=50/5;    
                 System.out.println(data);    
                  }      
                    catch(NullPointerException e){  
                      System.out.println(e);  
                     }    
  
                   finally {  
                      System.out.println("finally block is always executed");  
                            }    
    
                      System.out.println("rest of phe code...");    
                           }    
                              }


12. What is an error?
-->Error is a interuption which might occur during the execution of program during run-time or complie-time.


13. What is “IS-A” and “HAS-A” relationship in java?
-->It is a mechanisim in which one class acquire the property of another class is called IS-A relationship.
   HAS-A relationship is also known as association,Association is a relationship between two seperate classes 
	establishes through their object.Composition and Aggregation are the two forms of association.


14. Why main() method is public , static and void in java?
-->main() method is public : TO call JVM from anywhere main() method should be public.It is not so complicated to understand. It is an access
             modifier of the main() method. We create main() method with public access specifier to execute it by 
             any program.

   static is public :static is a keyword which we use in the main() method to define it as static. 
             There is no object of the class available at the time of starting java runtime, and because of 
             that, we have to define the main() method as static. By doing that, JVM can load the class into
             the main memory and call the main() method.

   void is public :each method provides some return type such as String, Boolean, Integer etc. The Java main() method
			 doesn't return anything, and its return type is void.



15. Can we overload the main method?
-->Yes

16. Can we have nested methods in java?
-->No,Java does not support “directly” nested methods.,Many functional programming languages support method within method.,But you can achieve nested
   method functionality in Java 7 or older version by define local classes, class within method so this does compile.


17. Can we write any methods in main() method?
-->Yes.


18. What is class and object? Give example
-->Class is a group of objects which have common properties.Class has a logical entity.eg:Block,Fields.
   Object is a real world entity which is a collection of states and behaviour.eg :Banking System.

	
19. What is JIT?
-->JIT(just intime compiler):- converting hotspot code into machine code.

20. Explain 10 built in exceptions in java
-->1.Arithmetic exception : It is thrown when an exceptional condition has occurred in an arithmetic operation.
   2.ArrayIndexOutOfBounds Exception : It is thrown to indicate that an array has been accessed with an illegal index. 
            The index is either negative or greater than or equal to the size of the array.
   3.ClassNotFoundException : This Exception is raised when we try to access a class whose definition is not found.
   4.FileNotFoundException : This Exception is raised when a file is not accessible or does not open.
   5.IOException : It is thrown when an input-output operation failed or interrupted.
   6.NullPointerException : This exception is raised when referring to the members of a null object. Null represents nothing
   7.NumberFormatException : This exception is raised when a method could not convert a string into a numeric format.
   8.StringIndexOutOfBoundsException : It is thrown by String class methods to indicate that an index is either negative than 
                                       the size of the string.
   9.InterruptedException : It is thrown when a thread is waiting, sleeping, or doing some processing, and it is interrupted.
   10.NoSuchMethodException : t is thrown when accessing a method which is not found.


21. Can we create our own exception? Give example
-->Yes,we can write our own Exception by using custom Exception.


22. Explain the Try, Catch, Throw, Throws.
--> Try :The try block contains a set of statements where an exception can occur.
			Syntax :try
						{
    						// statement(s) that might cause exception
						}

	Catch :The catch block is used to handle the uncertain condition of a try block. A try block is always followed
			 by a catch block, which handles the exception that occurs in the associated try block.
			 Syntax :catch
						{
  						 // statement(s) that handle an exception
   						// examples, closing a connection, closing
   						// file, exiting the process after writing
  						 // details to a log file.
						}

	Throw :The throw keyword is used to transfer control from the try block to the catch block. 

	Throws :The throws keyword is used for exception handling without try & catch block. It specifies
			 the exceptions that a method can throw to the caller and does not handle itself. 
	
23. String is a Keyword or not?
-->String is not a keyword its an object.


24. How to create a string object?
-->Creating an object of the String class using the new keyword by passing the string value as a parameter
   of its constructor.Passing a character array to the String constructor.
    String s = new String();


25. Write a program,
1. method with parameter and return type.
-->public class EvenOrOdd {
	 
	void checks(int n)
	{
		if(n%2 == 0)
	      {
		    System.out.println(n+"is a even");
	      }
		else
		{
			System.out.println(n+"is a odd");
		}
	}
    }

2.. method without parameter and with return type.
-->class TestReturn 
 {
    int  display()
      {
    	  return 10;
      }
public static void main(String[] args)
{
	TestReturn tr = new TestReturn();
	
	tr.display();
	System.out.println(tr.display());
	}

3. method with parameter and without return type.
-->public class Again {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		EvenOrOdd eo = new EvenOrOdd();
		
		for(int i=1; i<=4; i++)
		{
			System.out.println("Enter the number");
			int num=sc.nextInt();
			eo.checks(num);
			System.out.println("-------------");
		}
	}

}

4. method without parameter and return type.
-->class MethodDemo {
	
	void display()
	{
		System.out.println("Hello world!");
	}
public static void main(String[] args)
    {
	  System.out.println("Start");
	
	   MethodDemo md = new MethodDemo();
	   md.display();
	   
	   System.out.println("End");
	   
	}

}